@model MvcProject.Bll.ViewModels.Artist.ArtistCreateViewModel

<div id="dialogCreateEdit" class="modal-dialog modal-dialog-centered" role="document">
    @using (var form = Html.BeginForm(ViewBag.Edit ? "Edit" : "Create", "Artist", FormMethod.Post, 
        new { enctype = "multipart/form-data", id = ViewBag.Edit ? "formEdit" : "formCreate" }))
    {
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @if (ViewBag.Edit)
            {
                <h4 class="modal-title" id="modalArtistLabel">Edit artist @Model.Name</h4>
            }
            else
            {
                <h4 class="modal-title" id="modalArtistLabel">Create new artist</h4>
            }
        </div>
        <div class="modal-body">
            @if (ViewBag.Edit)
            {
                @Html.HiddenFor(model => model.Id, new { id = "hiddenId" })
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Aliases)
                @Html.TextBoxFor(model => model.Aliases, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Aliases)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Interval)
                @Html.TextBoxFor(model => model.Interval.StartDate, new { @class = "form-control datepicker" })
                @Html.TextBoxFor(model => model.Interval.EndDate, new { @class = "form-control datepicker" })
            </div>
            @if (ViewBag.Edit)
            {
                <div class="form-group">
                    @Html.Label("Current picture")
                    @Html.HiddenFor(model => model.PictureId)
                    @Html.Action("Picture", "Artist", new { id = Model.PictureId })
                </div>
            }
            <div class="form-group">
                @Html.HiddenFor(model => model.TempPicId, new { id = "PictureIdUpload" })
                @Html.Label("Picture")
                <input type="file" name="upload" accept="image/*" class="form-control" id="btn-upload-pic" /><br><br>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary btn-lg" data-dismiss="modal">Discard changes</button>
            <button type="submit" class="btn btn-primary btn-lg" id="saveModal">Save changes</button>
        </div>

    </div>
    }
</div>


